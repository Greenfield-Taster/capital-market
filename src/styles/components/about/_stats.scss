@use "../../variables" as v;

// Stats container
.stats-container {
  margin-bottom: v.$spacing-lg;
  padding-left: v.$spacing-md; // Left padding/margin as requested

  .stats-grid-about {
    display: flex; // Changed from grid to flex
    flex-direction: row; // Ensure horizontal layout
    flex-wrap: nowrap; // Prevent wrapping by default
    justify-content: flex-start; // Left alignment as requested
    gap: v.$spacing-md; // Space between items
    width: 100%;

    @media (max-width: v.$breakpoint-sm) {
      flex-wrap: wrap; // Allow wrapping on small screens
    }
  }
}

// Moved stat-item styles out of .stats-container since
// the component adds stat-item class directly
.stat-item {
  flex: 0 0 auto; // Don't grow or shrink, use natural width
  min-width: 150px;
  max-width: 250px; // Limit maximum width
  text-align: center;
  padding: v.$spacing-lg;
  background: linear-gradient(135deg, v.$almost-white, v.$milk);
  border-radius: v.$border-radius-lg;
  box-shadow: v.$shadow-sm;
  transition: all v.$transition-medium;
  border-top: 3px solid transparent;
  border-image: linear-gradient(to right, v.$terracotta, v.$dark-blue);
  border-image-slice: 1;
  position: relative;
  overflow: hidden;

  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom right,
      rgba(255, 255, 255, 0.2) 0%,
      rgba(255, 255, 255, 0) 80%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  &:hover {
    transform: translateY(-5px);
    box-shadow: v.$shadow-md;

    &::after {
      opacity: 1;
    }
  }

  @media (max-width: v.$breakpoint-sm) {
    flex: 1 0 calc(50% - v.$spacing-md); // On small screens, 2 per row
    margin-bottom: v.$spacing-md;
  }

  .stat-number {
    display: block;
    font-family: v.$font-primary;
    font-size: v.$font-size-3xl;
    font-weight: v.$font-weight-bold;
    color: v.$dark-blue;
    margin-bottom: v.$spacing-xs;
    position: relative;
    z-index: 1;
    text-shadow: 0 2px 4px rgba(v.$dark-blue, 0.1);
  }

  .stat-title {
    display: block;
    font-size: v.$font-size-sm;
    color: v.$graphite-medium;
    text-transform: uppercase;
    letter-spacing: 1px;
    position: relative;
    z-index: 1;
  }

  // Different gradient borders with nth-of-type instead of nth-child
  &:nth-of-type(1) {
    border-image: linear-gradient(to right, v.$terracotta, v.$dark-blue-60);
    border-image-slice: 1;
  }

  &:nth-of-type(2) {
    border-image: linear-gradient(to right, v.$dark-blue-60, v.$terracotta);
    border-image-slice: 1;
  }

  &:nth-of-type(3) {
    border-image: linear-gradient(to right, v.$terracotta, v.$dark-blue);
    border-image-slice: 1;
  }

  &:nth-of-type(4) {
    border-image: linear-gradient(to right, v.$dark-blue, v.$terracotta);
    border-image-slice: 1;
  }
}
